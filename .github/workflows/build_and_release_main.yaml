name: Build and Release Main

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: "18"
      - run: yarn install --immutable --immutable-cache --check-cache
      - run: yarn lint
      - run: yarn test
      - run: yarn build
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git config --global user.email "ahernandezc@protonmail.com"
      - run: git config --global user.name "AlejandroHerr"
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: "18"
      - name: Yarn Install
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Release
        run: yarn standard-version release
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
  publish:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Set releasetag
        id: releasetag
        run: echo "releasetag=$(curl -s https://api.github.com/repos/AlejandroHerr/docker-mdns-repeater/tags | jq '.[0].name' | sed 's/\"//g')" >> $GITHUB_OUTPUT
      - name: tagcheckout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.releasetag.outputs.releasetag }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ true }}
            type=semver,pattern={{version}},value=${{ steps.releasetag.outputs.releasetag }}
          labels: |
            org.opencontainers.image.version=${{ steps.releasetag.outputs.releasetag }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: production
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
